set -g default-command /usr/bin/fish
set -g default-shell /usr/bin/fish

source-file ~/.tmux.reset.conf

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Enable 256 colors
set -g default-terminal "xterm-termite"
set -g history-limit 4096
set -g focus-events on
# set -w -g window-status-current-bg white
# set -w -g window-status-current-fg black

# Remap from C-b to C-x
unbind C-b
set-option -g prefix C-x
bind-key C-x send-prefix

# Reload config file
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded."

# Window navigation
bind-key n next-window
bind-key m previous-window

# switch panes using Alt-arrow without prefix
unbind M-h
unbind M-j
unbind M-k
unbind M-l

set -g status-keys vi
setw -g mode-keys vi

#https://superuser.com/questions/252214/slight-delay-when-switching-modes-in-vim-using-tmux-or-screen
set -sg escape-time 0

bind h split-window -h
bind u split-window -v
unbind '"'
unbind %
bind z resize-pane -Z
bind -r M-h resize-pane -L 5
bind -r M-j resize-pane -D 5
bind -r M-k resize-pane -U 5
bind -r M-l resize-pane -R 5
bind S set synchronize-panes
bind b copy-mode

# Search back to last prompt; searches for non-breaking space in prompt.
bind-key e copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "Â "

# Don't wrap searches;
set -w -g wrap-search off

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"

set -g set-clipboard off

set -g focus-events on

# Set status line message background colour, where colour is one of:
# black, red, green, yellow, blue, magenta, cyan, white, colour0 to
# colour255 from the 256-colour palette, or default.

# Status line.
# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
set -g status-fg colour21
set -g status-bg black
set -g status-left-length 40
set -g status-left '#[fg=colour21,bold] #S | ' # SECTION SIGN (UTF-8: c2 a7)
set -g status-right "#{?pane_synchronized, #[bg=blue]SYNCHRONIZED#[default],} #[fg=bold]#h "
set -g status-right "#[fg=colour21,bold]$USER | #h #[fg=colour21,bold]"
set -g display-time 1300

# Window activity.
# setw -g window-status-activity-fg colour246 # grey
# setw -g window-status-activity-bg black

# Command/message line.
set -g message-style fg=white,bg=black,bright

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Select previous layout
bind p select-layout -o
# Fast toggle between current and last-used window: prefix-l

set -g mouse on
bind-key -T root MouseDrag1Border resize-pane -M
# Allow mouse scroll
bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"


# Stay in copy mode on drag end.
unbind-key -T copy-mode-vi MouseDragEnd1Pane
