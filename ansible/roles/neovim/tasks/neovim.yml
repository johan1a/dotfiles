
  - name: Symlink .coc-settings.json
    script: >
          scripts/install_dotfile
          "{{ dotfiles_dir }}/ansible/roles/neovim/templates/coc-settings.json"
          "{{ user_home }}/.vim/coc-settings.json"

  - name: Check if Vundle exists
    stat: path="{{ user_home }}/.vim/bundle/Vundle.vim"
    register: vundle_dir

  - name: Install Vundle
    git: repo=https://github.com/VundleVim/Vundle.vim.git
         dest="{{ user_home }}/.vim/bundle/Vundle.vim"
         accept_hostkey=yes
    when: not vundle_dir.stat.exists

  - name: Install plugins
    become_user: "{{ username }}"
    command: nvim +PluginInstall +qall
    when: not ci

  - name: Update remote plugins
    become_user: "{{ username }}"
    command: nvim +UpdateRemotePlugins +qall
    when: not ci

  - name: Check for LanguageClient-neovim
    stat:
      path: "{{ user_home }}/.vim/bundle/LanguageClient-neovim/bin/languageclient"
    register: languageclient

  - name: Install LanguageClient-neovim
    command: sh install.sh
    become_user: "{{ username }}"
    args:
      chdir: "{{ user_home }}/.vim/bundle/LanguageClient-neovim"
    when: not languageclient.stat.exists
    failed_when: false

  - name: Setup permissions
    file:
      path: "{{ user_home }}/.vim"
      owner: "{{ username }}"
      recurse: yes

  - name: install neovim gem
    command: gem install neovim
    become_user: "{{ username }}"

  - name: Symlink custom_snippets
    script: >
          scripts/install_dotfile
          "{{ dotfiles_dir }}/ansible/roles/neovim/templates/custom_snippets"
          "{{ user_home }}/.vim/custom_snippets"
