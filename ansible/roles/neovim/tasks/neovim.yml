
  - name: Install neovim gems
    gem:
      name: "{{ item }}"
      state: latest
    with_items:
      - rdoc
      - neovim

  - name: Install neovim pip2 package
    pip:
      name: neovim
      state: latest
      executable: pip2
    when: false

  - name: Install neovim pip3 package
    pip:
      name: neovim
      state: latest
      executable: pip3

  - name: Make sure .vim exists
    file:
      path: "{{ user_home }}/.vim"
      state: directory
      owner: "{{ username }}"

  - name: Link neovim to vim config
    script: >
          scripts/install_dotfile
          "{{ user_home }}/.vim"
          "{{ user_home }}/.config/nvim"

  - name: Symlink .vimrc
    script: >
          scripts/install_dotfile
          "{{ dotfiles_dir }}/ansible/roles/neovim/templates/vimrc"
          "{{ user_home }}/{{ item }}"
    with_items:
      - .vimrc
      - .vim/init.vim

  - name: Check if Vundle exists
    stat: path="{{ user_home }}/.vim/bundle/Vundle.vim"
    register: vundle_dir

  - name: Install Vundle
    git: repo=https://github.com/VundleVim/Vundle.vim.git
         dest="{{ user_home }}/.vim/bundle/Vundle.vim"
         accept_hostkey=yes
    when: not vundle_dir.stat.exists

  - name: Install plugins
    become: true
    command: nvim +PluginInstall +qall
    when: not ci

  - name: Update remote plugins
    become: true
    command: nvim +UpdateRemotePlugins +qall
    when: not ci

  - name: Setup permissions
    file:
      path: "{{ user_home }}/.vim"
      owner: "{{ username }}"
      recurse: yes

  - name: install neovim gem
    command: gem install neovim
    become: true

  - name: install neovim npm package
    npm:
      name: neovim
      global: yes

  - name: Symlink custom_snippets
    script: >
          scripts/install_dotfile
          "{{ dotfiles_dir }}/ansible/roles/neovim/templates/custom_snippets"
          "{{ user_home }}/.vim/custom_snippets"
