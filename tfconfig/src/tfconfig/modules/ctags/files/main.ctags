#https://andrew.stwrt.ca/posts/vim-ctags/
# Basic options
--tag-relative=yes
--exclude=.git
--exclude=build
--exclude=dist
--exclude=node_modules
--exclude=.nuxt
--exclude=out
--exclude=target
--exclude=bundle.js
--exclude=*.js.map
--exclude=*.min.*
--exclude=*.swp
--exclude=*.bak
--exclude=*.tar.*

# Regex for Clojure
--langmap=Clojure:.clj
 --regex-clojure=/\([ \t]*create-ns[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/n,namespace/
 --regex-clojure=/\([ \t]*def[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/d,definition/
 --regex-clojure=/\([ \t]*defn-?[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/f,function/
 --regex-clojure=/\([ \t]*defmacro[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/m,macro/
 --regex-clojure=/\([ \t]*definline[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/i,inline/
 --regex-clojure=/\([ \t]*defstruct[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/s,struct/
 --regex-clojure=/\([ \t]*intern[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/v,intern/
 --regex-clojure=/\([ \t]*ns[ \t]+([-[:alnum:]*+!_:\/.?]+)/\1/n,namespace/

--langdef=Groovy
--langmap=Groovy:.groovy
--regex-Groovy=/^\s*package\s+([a-zA-Z0-9.-_]+)/\1/p,package/
--regex-Groovy=/^\s*(abstract)?\s*(private|protected|public)?\s*class\s+([A-Za-z0-9_]+)\s+/\3/c,class/
--regex-groovy=/^[ \t]*[(static|private|public|protected) \t]*(def|[A-Za-z0-9_.]+)[ \t]+([A-Za-z0-9_]+)[ \t]*\(/\2/u,function,functions/
--regex-Groovy=/^\s*(def|String|void)\s+([a-zA-Z0-9_]+\([A-Za-z0-9 _]*\))\s+/\2/m,method/
--regex-Groovy=/^\s*(def|String|File)\s+([a-zA-Z0-9_]+)$/\2/f,field/
--regex-Groovy=/^\s*(def|String|File)\s+([a-zA-Z0-9_]+)\s+=/\2/f,field/

--langdef=scala
--langmap=scala:.scala
--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t ]*)*(private|protected)?[ \t ]*class[ \t ]+([a-zA-Z0-9_]+)/\4/c,classes/
# --regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t ]*)*(private|protected)?[ \t ]*object[ \t ]+([a-zA-Z0-9_]+)/\4/c,objects/
--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t ]*)*(private|protected)?[ \t ]*trait[ \t ]+([a-zA-Z0-9_]+)/\4/t,traits/
--regex-scala=/^[ \t ]*type[ \t ]+([a-zA-Z0-9_]+)/\1/T,types/
--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t ]*)*def[ \t ]+([a-zA-Z0-9_]+)/\3/m,methods/
--regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t ]*)*val[ \t ]+([a-zA-Z0-9_]+)/\3/l,constants/
# --regex-scala=/^[ \t ]*((abstract|final|sealed|implicit|lazy)[ \t ]*)*var[ \t ]+([a-zA-Z0-9_]+)/\3/l,variables/
--regex-scala=/^[ \t ]*package[ \t ]+([a-zA-Z0-9_.]+)/\1/p,packages/
