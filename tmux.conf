#unbind-key -a
#

# Defaults: 
#bind-key        C-b send-prefix
bind-key        C-o rotate-window
bind-key        C-z suspend-client
bind-key      Space next-layout
bind-key          ! break-pane
#bind-key          " split-window
bind-key          # list-buffers
bind-key          $ command-prompt -I #S "rename-session '%%'"
#bind-key          % split-window -h
bind-key          & confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key          ' command-prompt -p index "select-window -t ':%%'"
bind-key          ( switch-client -p
bind-key          ) switch-client -n
bind-key          , command-prompt -I #W "rename-window '%%'"
bind-key          - delete-buffer
bind-key          . command-prompt "move-window -t '%%'"
bind-key          0 select-window -t :0
bind-key          1 select-window -t :1
bind-key          2 select-window -t :2
bind-key          3 select-window -t :3
bind-key          4 select-window -t :4
bind-key          5 select-window -t :5
bind-key          6 select-window -t :6
bind-key          7 select-window -t :7
bind-key          8 select-window -t :8
bind-key          9 select-window -t :9
bind-key          : command-prompt
bind-key          ; last-pane
bind-key          = choose-buffer
bind-key          ? list-keys
bind-key          D choose-client
bind-key          L switch-client -l
bind-key          [ copy-mode
bind-key          ] paste-buffer
bind-key          c new-window
bind-key          d detach-client
bind-key          f command-prompt "find-window '%%'"
bind-key          i display-message
bind-key          l last-window
bind-key          n next-window
bind-key          o select-pane -t :.+
bind-key          p previous-window
bind-key          q display-panes
bind-key          r refresh-client
bind-key          s choose-tree
bind-key          t clock-mode
bind-key          w choose-window
bind-key          x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key          z resize-pane -Z
bind-key          { swap-pane -U
bind-key          } swap-pane -D
bind-key          ~ show-messages
bind-key      PPage copy-mode -u
#bind-key -r      Up select-pane -U
#bind-key -r    Down select-pane -D
#bind-key -r    Left select-pane -L
#bind-key -r   Right select-pane -R
bind-key        M-1 select-layout even-horizontal
bind-key        M-2 select-layout even-vertical
bind-key        M-3 select-layout main-horizontal
bind-key        M-4 select-layout main-vertical
bind-key        M-5 select-layout tiled
bind-key        M-n next-window -a
bind-key        M-o rotate-window -D
bind-key        M-p previous-window -a
bind-key -r    M-Up resize-pane -U 5
bind-key -r  M-Down resize-pane -D 5
bind-key -r  M-Left resize-pane -L 5
bind-key -r M-Right resize-pane -R 5
bind-key -r    C-Up resize-pane -U
bind-key -r  C-Down resize-pane -D
bind-key -r  C-Left resize-pane -L
bind-key -r C-Right resize-pane -R


# https://github.com/tmux/tmux/issues/754 
# based on https://stackoverflow.com/a/40902312/1046584
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on; bind -t vi-copy v begin-selection; bind -t vi-copy r rectangle-toggle; bind -t vi-copy y copy-pipe 'xclip -filter -selection clipboard | xclip -selection primary'"


# Enable 256 colors
set -g default-terminal "screen-256color"

# Remap from C-b to C-x
unbind C-b
set-option -g prefix C-x
bind-key C-x send-prefix

# Reload config file
bind-key r source-file ~/.tmux.conf \; \
                   display-message "Configuration reloaded."


# switch panes using Alt-arrow without prefix
#bind-key -n M-h select-pane -L
#bind-key -n M-j select-pane -D 
#bind-key -n M-k select-pane -U
#bind-key -n M-l select-pane -R
unbind A-h
unbind A-j
unbind A-k
unbind A-l
unbind M-h
unbind M-j
unbind M-k
unbind M-l

bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D 
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

set -g status-keys vi
setw -g mode-keys vi

#https://superuser.com/questions/252214/slight-delay-when-switching-modes-in-vim-using-tmux-or-screen
set -sg escape-time 0

# split panes 
bind h split-window -h
bind u split-window -v
unbind '"'
unbind %

bind -r M-h resize-pane -L 5
bind -r M-j resize-pane -D 5
bind -r M-k resize-pane -U 5
bind -r M-l resize-pane -R 5

bind S set synchronize-panes

bind b copy-mode

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"

set -g set-clipboard off

# Colors

# Status line.
set -g status-fg white
set -g status-bg black
set -g status-left ""
set -g status-right "#{?pane_synchronized, #[bg=blue]SYNCHRONIZED#[default],} #S "

# Window activity.
setw -g window-status-activity-fg colour246 # grey
setw -g window-status-activity-bg black

# Command/message line.
set -g message-fg white
set -g message-bg black
set -g message-attr bright


